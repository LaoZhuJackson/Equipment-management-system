#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EMS.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="infoDB")]
	public partial class infoDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertdept_info(dept_info instance);
    partial void Updatedept_info(dept_info instance);
    partial void Deletedept_info(dept_info instance);
    partial void InsertEmployee_info(Employee_info instance);
    partial void UpdateEmployee_info(Employee_info instance);
    partial void DeleteEmployee_info(Employee_info instance);
    partial void InsertEquip_Information(Equip_Information instance);
    partial void UpdateEquip_Information(Equip_Information instance);
    partial void DeleteEquip_Information(Equip_Information instance);
    #endregion
		
		public infoDBDataContext() : 
				base(global::EMS.DAL.Properties.Settings.Default.infoDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public infoDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public infoDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public infoDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public infoDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<dept_info> dept_info
		{
			get
			{
				return this.GetTable<dept_info>();
			}
		}
		
		public System.Data.Linq.Table<Employee_info> Employee_info
		{
			get
			{
				return this.GetTable<Employee_info>();
			}
		}
		
		public System.Data.Linq.Table<Equip_Information> Equip_Information
		{
			get
			{
				return this.GetTable<Equip_Information>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dept_info")]
	public partial class dept_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private System.Nullable<int> _person_id;
		
		private EntityRef<Employee_info> _Employee_info;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onperson_idChanging(System.Nullable<int> value);
    partial void Onperson_idChanged();
    #endregion
		
		public dept_info()
		{
			this._Employee_info = default(EntityRef<Employee_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_id", DbType="Int")]
		public System.Nullable<int> person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					if (this._Employee_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperson_idChanging(value);
					this.SendPropertyChanging();
					this._person_id = value;
					this.SendPropertyChanged("person_id");
					this.Onperson_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_info_dept_info", Storage="_Employee_info", ThisKey="person_id", OtherKey="Id", IsForeignKey=true)]
		public Employee_info Employee_info
		{
			get
			{
				return this._Employee_info.Entity;
			}
			set
			{
				Employee_info previousValue = this._Employee_info.Entity;
				if (((previousValue != value) 
							|| (this._Employee_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee_info.Entity = null;
						previousValue.dept_info.Remove(this);
					}
					this._Employee_info.Entity = value;
					if ((value != null))
					{
						value.dept_info.Add(this);
						this._person_id = value.Id;
					}
					else
					{
						this._person_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee_info")]
	public partial class Employee_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private string _password;
		
		private string _phone;
		
		private System.Nullable<bool> _is_admin;
		
		private string _dept;
		
		private EntitySet<dept_info> _dept_info;
		
		private EntitySet<Equip_Information> _Equip_Information;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void Onis_adminChanging(System.Nullable<bool> value);
    partial void Onis_adminChanged();
    partial void OndeptChanging(string value);
    partial void OndeptChanged();
    #endregion
		
		public Employee_info()
		{
			this._dept_info = new EntitySet<dept_info>(new Action<dept_info>(this.attach_dept_info), new Action<dept_info>(this.detach_dept_info));
			this._Equip_Information = new EntitySet<Equip_Information>(new Action<Equip_Information>(this.attach_Equip_Information), new Action<Equip_Information>(this.detach_Equip_Information));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_admin", DbType="Bit")]
		public System.Nullable<bool> is_admin
		{
			get
			{
				return this._is_admin;
			}
			set
			{
				if ((this._is_admin != value))
				{
					this.Onis_adminChanging(value);
					this.SendPropertyChanging();
					this._is_admin = value;
					this.SendPropertyChanged("is_admin");
					this.Onis_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept", DbType="NVarChar(50)")]
		public string dept
		{
			get
			{
				return this._dept;
			}
			set
			{
				if ((this._dept != value))
				{
					this.OndeptChanging(value);
					this.SendPropertyChanging();
					this._dept = value;
					this.SendPropertyChanged("dept");
					this.OndeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_info_dept_info", Storage="_dept_info", ThisKey="Id", OtherKey="person_id")]
		public EntitySet<dept_info> dept_info
		{
			get
			{
				return this._dept_info;
			}
			set
			{
				this._dept_info.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_info_Equip_Information", Storage="_Equip_Information", ThisKey="Id", OtherKey="person_id")]
		public EntitySet<Equip_Information> Equip_Information
		{
			get
			{
				return this._Equip_Information;
			}
			set
			{
				this._Equip_Information.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dept_info(dept_info entity)
		{
			this.SendPropertyChanging();
			entity.Employee_info = this;
		}
		
		private void detach_dept_info(dept_info entity)
		{
			this.SendPropertyChanging();
			entity.Employee_info = null;
		}
		
		private void attach_Equip_Information(Equip_Information entity)
		{
			this.SendPropertyChanging();
			entity.Employee_info = this;
		}
		
		private void detach_Equip_Information(Equip_Information entity)
		{
			this.SendPropertyChanging();
			entity.Employee_info = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equip_Information")]
	public partial class Equip_Information : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _specification;
		
		private System.Nullable<int> _price;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _location;
		
		private System.Nullable<int> _person_id;
		
		private string _images;
		
		private EntityRef<Employee_info> _Employee_info;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnspecificationChanging(string value);
    partial void OnspecificationChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void Onperson_idChanging(System.Nullable<int> value);
    partial void Onperson_idChanged();
    partial void OnimagesChanging(string value);
    partial void OnimagesChanged();
    #endregion
		
		public Equip_Information()
		{
			this._Employee_info = default(EntityRef<Employee_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specification", DbType="NVarChar(50)")]
		public string specification
		{
			get
			{
				return this._specification;
			}
			set
			{
				if ((this._specification != value))
				{
					this.OnspecificationChanging(value);
					this.SendPropertyChanging();
					this._specification = value;
					this.SendPropertyChanged("specification");
					this.OnspecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(50)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_id", DbType="Int")]
		public System.Nullable<int> person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					if (this._Employee_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperson_idChanging(value);
					this.SendPropertyChanging();
					this._person_id = value;
					this.SendPropertyChanged("person_id");
					this.Onperson_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_images", DbType="NVarChar(80)")]
		public string images
		{
			get
			{
				return this._images;
			}
			set
			{
				if ((this._images != value))
				{
					this.OnimagesChanging(value);
					this.SendPropertyChanging();
					this._images = value;
					this.SendPropertyChanged("images");
					this.OnimagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_info_Equip_Information", Storage="_Employee_info", ThisKey="person_id", OtherKey="Id", IsForeignKey=true)]
		public Employee_info Employee_info
		{
			get
			{
				return this._Employee_info.Entity;
			}
			set
			{
				Employee_info previousValue = this._Employee_info.Entity;
				if (((previousValue != value) 
							|| (this._Employee_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee_info.Entity = null;
						previousValue.Equip_Information.Remove(this);
					}
					this._Employee_info.Entity = value;
					if ((value != null))
					{
						value.Equip_Information.Add(this);
						this._person_id = value.Id;
					}
					else
					{
						this._person_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
